/**
 * DO NOT EDIT THIS FILE 
 * author: Ronny Hartanto (2022)
 */

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.GregorianCalendar;

public class TestExercise07a {

  @Test
  public void test01()
  {
   PrintStream originalOut = System.out;
   ByteArrayOutputStream bos = new ByteArrayOutputStream();
   System.setOut(new PrintStream(bos));
   Circle c1 = new Circle();
   Circle c2 = new Circle(20);
   Circle c3 = new Circle(100,1.5,2.0);
   assertFalse(c1.isFilled());
   assertEquals(c1.getX(), 0);
   assertEquals(c2.getY(), 0);
   assertEquals("white", c2.getColor());
   c2.setColor("blue");
   assertEquals(100.0, c3.getRadius());
   assertEquals(20, c2.getRadius());
   assertEquals(1.0, c1.getRadius());
   assertEquals(6.283185307179586, c1.getPerimeter(), 0.0001);
   assertEquals(125.66370614359172, c2.getPerimeter(), 0.0001);
   assertEquals(628.3185307179587, c3.getPerimeter(), 0.0001);
   assertEquals(31415.926535897932, c3.getArea(), 0.00000001);
   assertEquals(3.141592653589793, c1.getArea(), 0.00000001);
   assertEquals(1256.6370614359173, c2.getArea(), 0.0000001);
   assertEquals("blue", c2.getColor());
   System.setOut(originalOut);
  }
   @Test
   public void test02()
   {
     PrintStream originalOut = System.out;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
     System.setOut(new PrintStream(bos));
     Circle c1 = new Circle();
     Circle c2 = new Circle(20);
     Circle c3 = new Circle(100,1.5,2.0);
     GeometricObject c4 = new Circle(50);
     GeometricObject c5 = c1;
     GeometricObject c6 = c2;
     assertFalse(c1.isFilled());
     assertEquals(c1.getX(), 0);
     assertEquals(c2.getY(), 0);
     assertEquals("white", c2.getColor());
     c2.setColor("blue");
     assertEquals(100.0, c3.getRadius());
     assertEquals(20, c2.getRadius());
     assertEquals(1, c1.getRadius());
     assertEquals(6.283185307179586, c1.getPerimeter(), 0.0001);
     assertEquals(125.66370614359172, c6.getPerimeter(), 0.0001);
     assertEquals(628.3185307179587, c3.getPerimeter(), 0.0001);
     assertEquals(7853.981633974483, c4.getArea(), 0.00000001);
     assertEquals(3.141592653589793, c5.getArea(), 0.00000001);
     assertEquals(1256.6370614359173, c2.getArea(), 0.0000001);
     assertEquals("blue", c6.getColor());
     System.setOut(originalOut);
   }   
   
  @Test
  public void test03()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Circle c1 = new Circle();
    Circle c2 = new Circle(20);
    Circle c3 = new Circle(100,1.5,2.0);
    GeometricObject c4 = new Circle(50);
    GeometricObject c5 = c1;
    GeometricObject c6 = c2;
    assertEquals(c5.toString(), "(0.00,0.00),r:1.00");    
    assertEquals(c6.toString(), "(0.00,0.00),r:20.00");
    assertEquals(c3.toString(), "(1.50,2.00),r:100.00");    
    assertEquals(c4.toString(), "(0.00,0.00),r:50.00");
    System.setOut(originalOut);
  }    

}
