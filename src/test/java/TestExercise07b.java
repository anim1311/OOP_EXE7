/**
 * DO NOT EDIT THIS FILE 
 * author: Ronny Hartanto (2022)
 */

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.assertFalse;

import org.junit.jupiter.api.Test;

import java.io.*;
import java.util.GregorianCalendar;

public class TestExercise07b {
 
   @Test
   public void test01()
   {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Rectangular r1 = new Rectangular();
    Rectangular r2 = new Rectangular(5.0,4.0);
    Rectangular r3 = new Rectangular(3.0, 6.0, 3.0, 4.0, 0.5);
    assertFalse(r1.isFilled());
    assertEquals(r1.getX(), 0);
    assertEquals(r1.getY(), 0);
    assertEquals("white", r2.getColor());
    r2.setColor("blue");
    assertEquals(1.0, r1.getWidth());
    assertEquals(1.0, r1.getHeight());
    assertEquals(5.0, r2.getWidth());
    assertEquals(4.0, r2.getHeight());
    assertEquals(0.0, r1.getTheta());
    assertEquals(3.0, r3.getX());
    assertEquals(4.0, r3.getY());
    assertEquals(18.0, r3.getArea());
    assertEquals(18.0, r2.getPerimeter());
    assertEquals("blue", r2.getColor());
    System.setOut(originalOut);
   }

   @Test
  public void test02()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Rectangular r1 = new Rectangular();
    Rectangular r2 = new Rectangular(5.0,4.0);
    Rectangular r3 = new Rectangular(3.0, 6.0, 3.0, 4.0, 0.5);
    GeometricObject g1 = r1;
    GeometricObject g2 = r2;
    GeometricObject g3 = r3;
    assertFalse(g1.isFilled());
    assertEquals(g1.getX(), 0);
    assertEquals(g1.getY(), 0);
    assertEquals("white", g2.getColor());
    r2.setColor("blue");
    assertEquals(1.0, r1.getWidth());
    assertEquals(1.0, r1.getHeight());
    assertEquals(5.0, r2.getWidth());
    assertEquals(4.0, r2.getHeight());
    assertEquals(0.0, g1.getTheta());
    assertEquals(3.0, g3.getX());
    assertEquals(4.0, g3.getY());
    assertEquals(18.0, g3.getArea());
    assertEquals(18.0, g2.getPerimeter());
    assertEquals("blue", g2.getColor());
    System.setOut(originalOut);
  }   
  @Test
  public void test03()
  {
    PrintStream originalOut = System.out;
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    System.setOut(new PrintStream(bos));
    Rectangular r1 = new Rectangular();
    Rectangular r2 = new Rectangular(5.0,4.0);
    Rectangular r3 = new Rectangular(3.0, 6.0, 3.0, 4.0, 3.14);
    GeometricObject g1 = r1;
    GeometricObject g2 = r2;
    GeometricObject g3 = r3;
    assertEquals(0.0, g1.getTheta());
    assertEquals(g3.getTheta(), 3.14);
    g3.rotate(-3.14);
    assertEquals(g3.getTheta(), 0.0, 0.000000001);
    g2.rotate(Math.PI/2);
    g3.rotate(-Math.PI/3);
    assertEquals(g1.toString(), "(0.00,0.00),(1.00,0.00),(1.00,1.00),(0.00,1.00)");    
    assertEquals(g2.toString(), "(0.00,0.00),(0.00,5.00),(-4.00,5.00),(-4.00,0.00)");
    assertEquals(g3.toString(), "(3.00,4.00),(4.50,1.40),(9.70,4.40),(8.20,7.00)");
    System.setOut(originalOut);
  }    
}
